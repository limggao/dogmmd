<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	   ">
		<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="${jdbc_driverClassName}"></property>
		<property name="url" value="${jdbc_url}"></property>
		<property name="username" value="${jdbc_username}"></property>
		<property name="password" value="${jdbc_password}"></property>
		<property name="minIdle" value="10" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="1000" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="removeAbandoned" value="true" />
		<property name="logAbandoned" value="true" />
	</bean>
	<!-- mybatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	    <!-- <property name="configLocation" value="classpath:mybatis-config.xml " />  -->
		<!-- 自动扫描entity目录，省略Configuration.xml里手工配置 -->
		<property name="mapperLocations" value="classpath:com/tjekuaitong/mapping/*.xml" />		
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- mybatis自动扫描加载Sql映射文件/接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tjekuaitong.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 配置事务管理器 -->
    <!-- MyBatis自动参与到spring事务管理中，无需额外配置，只要org.mybatis.spring.SqlSessionFactoryBean引用的数据源
	                     与DataSourceTransactionManager引用的数据源一致即可，否则事务管理会不起作用。 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 注解方式配置事物 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
	<!-- 切点拦截的位置下，所有形式类似的方法名，‘事务’都会交由相应事务管理工具管理 ①开启  ②提交  ③回滚   ④关闭  ⑤清空-->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"   rollback-for="java.lang.Exception" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="submit*" propagation="REQUIRED" />
			<tx:method name="confirm*" propagation="REQUIRED" />
			<tx:method name="merchant*" propagation="REQUIRED" />
			<tx:method name="produced*" propagation="REQUIRED" />
			<tx:method name="baiduCallBack*" propagation="REQUIRED" />
			<tx:method name="offiCallBack*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="datagrid*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
	    <!-- 对所有层的事务方法进行切点拦截 
	       *的含义：①所有返回类型 ②所有包③所有类 ④所有方法(..)标识方法内的所有参数
	    -->
		<aop:pointcut id="transactionPointcut" expression="execution(* com.tjekuaitong.*.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" abstract="false" lazy-init="false" autowire="default">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
</beans>